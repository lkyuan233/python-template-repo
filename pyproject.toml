# Defines the build system required for setuptools
[build-system]
requires = ["setuptools", "wheel"]  # Required for building the package
build-backend = "setuptools.build_meta"

[project]
name = "python-template-repo"  # Name of your project
version = "0.1.0"  # Initial version
description = "Add your description here"  # Short project description
readme = "README.md"  # Points to the README file
requires-python = ">=3.12"  # Minimum required Python version

# List of dependencies required for your project
dependencies = [
    "coverage>=7.6.12", # Code coverage analysis
    "fastapi>=0.115.11", # Web framework for APIs
    "mypy>=1.15.0", # Static type checker
    "numpy>=2.2.3", # Numerical computing library
    "pluggy>=1.5.0", # Plugin management system
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0", # Testing framework
    "requests>=2.32.3", # HTTP requests library
    "ruff>=0.9.10", # Linter and formatter
]

# Pytest Configuration (for running tests)
[tool.pytest.ini_options]
testpaths = ["tests", "src"]  # Directories where pytest should look for tests
python_files = ["test_*.py"]  # Only detect test files prefixed with 'test_'
pythonpath = ["src"]           #  Ensures `src/` is recognized as a module
addopts = "-x --doctest-modules --cov=src --cov-report=term-missing --strict-markers"
# -x: Stop after the first failure (fail-fast)
# --doctest-modules: Run doctests in docstrings
# --cov=src: Measure test coverage for 'src' directory
# --cov-report=term-missing: Show missing coverage in terminal
# --strict-markers: Ensures only registered pytest markers are used

# Coverage settings (for test coverage reporting)
[tool.coverage.run]
branch = true  # Enables branch coverage (not just line coverage)
source = ["src"]  # Include 'src' directory in coverage report
omit = [
    "src/**/__init__.py",  # Ignore __init__.py files (since they just define packages)
]

# Mypy configuration (for type checking)
[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]  # Enables better type checking for NumPy
strict = true  # Enables strict type checking
ignore_missing_imports = true  # Ignore type errors for missing third-party libraries
warn_unused_ignores = true  # Warn if `# type: ignore` comments are unnecessary
exclude = ["tests/"]  # Exclude test files from mypy checks

# Ruff Configuration (for linting and formatting)
[tool.ruff]
line-length = 88  # Enforces max line length of 88 characters

# Linting rules for Ruff
[tool.ruff.lint]
select = [
    "E",   # Pyflakes error codes (syntax errors, undefined variables, etc.)
    "F",   # Pyflakes warnings (unused imports, redefined variables, etc.)
    "I",   # Import sorting issues
    "N",   # Naming convention violations
    "B",   # Bugbear warnings (security/safety issues)
    "D",   # Docstring-related issues
    "UP",  # Python upgrade suggestions
    "ANN", # Type annotation-related checks
    "TID", # Tidy imports
    "SIM", # Simplifications
    "PL",  # Pylint rules
    "C4",  # Comprehension best practices
    "PTH", # Pathlib improvements
]
ignore = ["D203"]  # Ignores specific docstring rule (D203: "1 blank line required before class docstring")

# Formatting rules for Ruff
[tool.ruff.format]
quote-style = "double"  # Ensures all strings use double quotes for consistency
